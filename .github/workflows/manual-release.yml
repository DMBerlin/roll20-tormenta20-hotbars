name: Manual Release Draft

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to create release for (e.g., v0.4.4)'
        required: true
        default: 'v0.4.4'
      use_changelog:
        description: 'Use CHANGELOG content for description'
        type: boolean
        default: true

jobs:
  manual-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.15.0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.1'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build extension
        run: pnpm run build
        
      - name: Extract CHANGELOG content
        id: changelog
        if: ${{ inputs.use_changelog }}
        run: |
          if [ -f "CHANGELOG.md" ]; then
            echo "üìã Extracting CHANGELOG content for version ${{ inputs.version }}..."
            
            # Extract content for the specific version
            CHANGELOG_CONTENT=$(awk -v version="${{ inputs.version }}" '
              BEGIN { found = 0; in_section = 0 }
              /^## \[/ {
                if (in_section) exit
                if ($0 ~ "\\[" version "\\]") {
                  found = 1
                  in_section = 1
                  next
                }
              }
              in_section && /^## \[/ { exit }
              in_section { print }
            ' CHANGELOG.md)
            
            if [ -n "$CHANGELOG_CONTENT" ]; then
              echo "‚úÖ CHANGELOG content extracted for ${{ inputs.version }}"
              echo "changelog<<EOF" >> $GITHUB_OUTPUT
              echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "‚ö†Ô∏è No CHANGELOG content found for version ${{ inputs.version }}"
              echo "changelog=No changelog content found for version ${{ inputs.version }}" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚ùå CHANGELOG.md not found"
            echo "changelog=CHANGELOG.md not found" >> $GITHUB_OUTPUT
          fi
          
      - name: Create release package
        run: |
          cd dist/package
          zip -r ../../tormenta20-hotbars-${{ inputs.version }}.zip .
          cd ../..
          echo "üì¶ Package created: tormenta20-hotbars-${{ inputs.version }}.zip"
          
      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.version }}
          name: "Release/${{ inputs.version }}"
          body: |
            ${{ steps.changelog.outputs.changelog }}
            
            ## üì¶ Instala√ß√£o
            1. Baixe o arquivo `tormenta20-hotbars-${{ inputs.version }}.zip`
            2. Extraia o conte√∫do em uma pasta
            3. Abra `chrome://extensions/`
            4. Ative o "Modo desenvolvedor"
            5. Clique em "Carregar sem compacta√ß√£o"
            6. Selecione a pasta extra√≠da
            7. Recarregue a p√°gina do Roll20
            
            ## üîÑ Sistema de Auto-Update
            - Verifica√ß√£o autom√°tica a cada 24 horas
            - Verifica√ß√£o manual nas configura√ß√µes da extens√£o
            - Notifica√ß√µes elegantes para novas vers√µes
          files: |
            tormenta20-hotbars-${{ inputs.version }}.zip
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Output release info
        run: |
          echo "üéâ Draft release created successfully!"
          echo "üìã Release: Release/${{ inputs.version }}"
          echo "üè∑Ô∏è  Tag: ${{ inputs.version }}"
          echo "üì¶ Package: tormenta20-hotbars-${{ inputs.version }}.zip"
          echo "üìù Description: ${{ steps.changelog.outputs.changelog == '' && 'Manual release' || 'From CHANGELOG.md' }}"
          echo ""
          echo "üîó To publish: https://github.com/${{ github.repository }}/releases"
